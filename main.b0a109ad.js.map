{"version":3,"sources":["src/canvas.ts","src/math/radian.ts","src/math/intersection.ts","src/ray.ts","src/lamp.ts","src/placer/cursor-position.state.ts","src/placer/mouse.placer.ts","src/segment.ts","src/polygon.ts","src/sight-zone.ts","src/scene.ts","src/game.ts","src/main.ts"],"names":[],"mappings":";;;;;AYAA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AZEA,AWFA,APAA,AQEA,AVEO,ADDA,AIDP,ACDA,AECA,ALCA,AIHA,AEEA,ITAA,AWFA,APAA,AQEM,AVEO,ADDA,AIDb,ACDA,AECA,ALCA,AIHA,AEEA,IGAU,EZAV,CYAa,CDFb,APAA,ADGA,AIHA,CPEA,ACCsB,AODtB,ACAA,EEFA,APAA,AQEiB,AVEO,ACDxB,AIHA,CNGyB,AODzB,ACAA,EPE2B,GUFV,CDFjB,APAA,AQEiB,ATCjB,AIHA,CIAA,APAA,ACEA,AGAA,ALCA,AIHA,CCEA,CPCa,CDDb,AYAqB,APArB,COAqB,AVER,AIHb,CMCuB,CHAvB,CHDA,GKDA,CAAA,AVGsB,CAAI,AOD1B,CAAA,CFDA,CNCA,AIFA,AFIwB,AIHxB,AHEA,AIHA,CHAA,AFI4B,AGF5B,AFCA,AIHA,CNGwC,CQDxC,CPEoC,ADDI,ECCF,OAAgB,AGFtD,EHEsD,UIHtD,CAAA;AKAA,APIA,AEDO,AEAP,ALCA,AIAA,EPCI,AEDA,ADFkD,AIElD,AIFA,EEFJ,APIA,AEDa,AEAb,ALCA,AIAA,KHAA,AFAW,ADF6C,EDGpD,AWLJ,ANII,AGDJ,ADCA,AEFI,CLEJ,AFAc,CAAC,CSJf,AVE6D,AOC7D,ADCA,GPCI,ACH4D,CDG5D,AEDgB,ACApB,CCAA,CJCI,AIDJ,AKFI,CEFJ,AVEoE,AKCtC,AHC9B,AMFiC,CEFjC,AVEqE,CCE5C,CDF8C,AKEnE,EGFkC,CLEtC,AHF2E,AOC3E,ADCA,CHAA,ADAA,AMFyD,CNEzD,CDAgC,ADF8C,AIE1E,CMJJ,ATIiC,AGA7B,CMJJ,CNII,ACDS,AGDiD,EAAA,CPExB,GMDtC,ADCA,WDD8B,AHC9B,CGAK,AHAL,MGAmC,EAAA;AKFnC,APKA,AFFA,ADHsD,AEItD,CDDC,ADHyF,CKErF,AEAD,ADIA,EPFI,AWJR,APKA,ACHI,AFEJ,AMJiC,EHE5B,CHEL,CHAY,AWJZ,APKA,ACHI,AIF6B,CTIpB,ASJoB,CNIjC,CQJA,APKA,AIHI,ADIA,CDJC,CDAD,CIFkC,ETIlB,AKFhB,CCAC,AGF4B,CDE7B,ADIA,CPFmB,AQFC,ADIQ,CFJ5B,ECAC,AGFiC,CHEjC,AHEL,CQJA,APKA,AGC4C,CDJvC,CEAwC,ADIiB,CPF/B,CAAC,AQFa,CDI2B,EAAA,IJFxE,CQJA,APKA,KJD6C,CAAC,QAAQ,CAAC;AEH1C,ADDA,EUKT,APGA,ADAA,EHHI,AKLI,ACEP,AEAmB,ADIQ,AENyB,GPC5C,ADDA,CDKD,AEJC,ADDA,AIAD,AGEY,ADIQ,AENyB,CTK5C,AKLD,AEMoB,AENyB,CHEpD,CKGD,APGA,ADAA,EGNC,CHMD,AIFiC,AENyB,CEK1D,APGA,AINoB,ALMQ,CQH5B,APG6B,CHRX,AMMU,AENyB,CEKrD,ANLiB,CHCG,CDDF,AOEE,ALMoB,CERb,CHCP,ACOsC,AIFzB,AENyB,CTKnC,CAAA,CAAE,AIGqB,AIN1B,CAAA,CJM0B,ADA0B,CKNpD,CPFF,AEQsD,IDPpD;AAIjB,ADHA,EQF0D,ETMzD,AWDJ,APG6B,AFHpB,ADHA,AEMmB,AIF8B,EFN7B,ACEV,AEAC,CHFU,ACEV,CNIZ,AWDR,APG6B,ADAD,AIF8B,CPAjD,AIEoB,ACRG,ACEV,AHMM,AIF8B,CFNzB,ACEV,ECIsC,CPAhD,AWDb,AVHkB,AOAE,CLMa,CIFyB,CPA1C,AWDhB,AVHqB,AOAD,CLMQ,CCAU,AING,ADIoB,CLDrC,CFCJ,AWDpB,CXCqB,AIEQ,CFHF,ACGM,GFNxB,GDImB,CAAC,CIES,CFH7B,GDHS,CAAI,IDIiB,CAAC,ACJJ,EAAA,EDIQ,CAAE,CEDtB,CAAI,GAAQ,EAAE,OAAgB,EAAA;EACtD,ADHA,AQDA,ETKI,AWNI,APKA,AIJiC,ALMiB,AILlD,ELGJ,ADHE,AIH6B,ACEV,CJIrB,AGNgC,ACEV,CKDlB,APKA,AFAJ,ACEsD,AILlD,CIFA,APKA,ACN8B,ACEV,AHM8B,AILlD,CLGJ,CDHO,AQDX,CTKY,ASLZ,CTKa,CCJC,AEKiD,CFLhD,AMAD,CIFC,CXME,AEDb,ACEsD,CHDxC,AIDD,AFAb,ADHc,AMAO,CIFC,EPKC,AKJ3B,CRCsB,AEKyC,AMN/D,CED8B,AVEP,EAAE,AMAO,CED5B,GTKyB,AEDd,AOJf,CTK8B,CWNA,ATKd,CSLc,EXMI,AEDf,CFCgB,CEDd,ESLe,CAAA,AFC/B,CEDiC,EXMI,ASLR,CTKS,AEDf,CAAC,AOJK,EPIH;EFE/B,ACJA,EUFQ,ATKJ,AGPmC,ACEV,AEAT,ALGZ,AIEJ,AEJA,CJHqC,ACEV,CFIF,AHFvB,CGEwB,COJtB,AHAY,ALGZ,AIEA,AEJE,CEDF,APIwB,AIJZ,ALGZ,AIEC,CHDwB,CFCtB,GOJK,CEDF,ATKC,ACFD,AIEC,CNHC,AOFW,CCCR,CEDK,ARGC,AIEP,AEJE,CRCD,AOFC,ADKF,CAAA,EILU,AJKV,CJFY,CFDN,EOFG,CPEA,EUFC,CAAA,AJKV,CAAA,CNHc,GUFC,CAAA,CAAE,EJKT,EAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;EPGxC,AEFR,ADHA,AKH+B,AEAa,ADM5C,EILQ,ANAJ,AFGI,AMFJ,ELE+B,CAAC,CJI5B,AWPA,ARGA,AMFE,CTMF,AWPA,APG8B,AHD9B,AECA,CEHE,CAAC,EFGC,EMFK,CNEY,EHIrB,ASNY,CTMZ,ACLU,CUFC,ARGc,GQHO,AVElB,CAAC,GUFqB,AVElB,AIFC,CAAC,IMAqB,CXO3B,AWP2B,CAAE,EXOnD,CCLoC,EIFG,CJEA,CIFE,OLOzC,ECLiD,CIFP,EJEU,GIFL,EJEU,AIFV;AJGnD,CAAC,CCIG,AIPA,AECO,ADMP,EPCI,AWLA,APAmC,ADGnC,CCHqC,CFInC,AGNE,AICA,CAAC,CTMD,AWLA,ATIA,ACDA,AICR,CPCS,AWLA,ALHT,AECO,ALKE,AICT,AELW,CDDJ,ACCK,CPKD,AGNC,CAAC,EHMC,ACDA,AMJE,CPKD,AOLE,CTMD,CAAC,AGFA,CAAA,CAAA,CQHG,ATIA,AOLE,CECD,ATIA,AGNC,ACDtB,AHMiB,AMJM,CTMD,AEDA,CKAtB,CIJwB,ANFC,AGAJ,ADMjB,AELsB,CTMD,ASNE,CAAC,CECD,AHF3B,ELKiB,AMJc,CNId,CHEc,AOD3B,CPC4B,AOD5B,CEL+B,CAAC,KDDpC,ALK0B,AMJe,CAAC,CNIf,AICvB,CPCsC,CODtC,AELyC,CAAC,CAAC,CNIf,CAAC,EMJkB,CFK1C,AEL2C,EFK3C,iFIJ4H;AVJ5H,ASLb,ENWqD,AFGjD,ACDA,EHEI,AWLA,ALHA,AECA,AERR,ERcU,AOLE,CRJC,AQIA,CTMD,AWLA,ATIA,ADTC,AIEkB,AGCjB,CROD,AWLA,ANHmB,AEM5B,AEJW,CCTf,ADSgB,CPKD,AGPmB,ACAnB,EECI,AERnB,CRckB,AOLE,CPKD,AOLE,CTMD,AKRmB,AGCjB,CROD,ACVC,AIEkB,CEMpC,EIHoB,ATIA,ADTF,AOGI,AER1B,ADS0B,CECD,ATIA,AMNE,AER3B,ADS2B,CPKD,AKDtB,CPEuB,CKRoB,AEM3C,AEJ0B,CAAC,CTMD,AQPE,ACCA,CECD,AHFE,EPHX,ASLtB,ADSmC,CECD,ADVlC,CFQqC,CROD,AQPE,CROD,ASNE,CAAC,IDDI,CAAA,ACCC,CDDC,ACCA,EECZ,CHFe,ACCA,CTMD,AQPE,ACCA,CDDC,ACCA,GDDG,CAAC,ACCA;AREhD,ASTP,EVcI,AIHA,AFEA,ACAA,CHCC,CCLQ,AOFL,AEPR,CDQS,CECG,ATIF,AIPE,ACMJ,CDNK,CFKT,AFEQ,AGRqC,AGEnC,ALMV,CCFA,ACN8C,ACCnC,AHOX,EQJY,ATID,AGRqC,CMInC,AVAI,CMGN,CLCG,CAAC,ADJK,AKHH,AECA,CHFoC,ACCnC,CKGA,ANJoC,ACCnC,ACMJ,CIHG,AHFE,AEPxB,AHYoB,CIHI,CTIA,AIPE,CJOD,AQbzB,CRa0B,AMNE,CJIxB,ADEA,CCFI,AHFK,AEIL,AIDkB,CLCG,ECArB,CCFA,ADEA,AObR,CNWQ,AFEyB,AMNE,AEPnC,CRakC,AMNC,CAAE,CPEhB,CCIgB,ADJZ,CCIa,GAAG,ACAjC,CCFA,AFEkC,ADJL,CEI7B,CCFA,AHF+B,GCIQ,ADJE,AKHvB,CJOsB,AIPtB,AHOf,CFJsC,CEItC,ICFK,EAAA,AMXhB,CAAA,UJM6C,CAAC,QAAQ,CAAC,CAAC;AILxD,EVeI,AEFA,ADJA,EUAI,AHDA,AERR,AHYI,AEJI,CECC,AJGJ,CLCK,AGTuD,ACErD,CDFuD,ACEtD,CNST,AEFQ,AMLE,ACAA,CTOV,AILA,AHDO,AKHI,AHMX,CFHO,CCII,ADJJ,EAAA,ASTX,CRakB,AMLE,CNKD,AIPE,CAAC,AINtB,CJMuB,AEEA,CROnB,AILA,ADEA,CHGA,CEFoB,ADJb,AKHe,CJOD,ADJd,AQDgB,CLEvB,AFGsB,ACDtB,COZJ,CVeS,AILL,ADEA,AOZJ,ADQ8B,CPKD,EFEzB,EEF6B,CAAC,ADJd,EAAC,CCIgB,CAAC,CQbtC,CTSyB,ASTzB,CRayC,ADJf,CCIgB,CFEtC,GCN2B,CCIgB,ADJf,AKHN,CJOsB,AIPtB,ELGS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,GAAG,AKHP,CLGQ,AKHP,CLGQ,GAAG,IKHH,CLGQ,AKHP,CLGQ,CAAC,CAAY,CAAC;AAC7E,ASPA,CTOC,CUAG,ATIA,EFEI,AKXA,AKFR,CLES,ACEA,CFID,AFGE,AGTA,AGGe,ALKjB,AMJI,CDDc,ACCb,CTOD,AEFA,CFEC,AQRe,ACCb,EPKA,EFEE,AILF,AIHiB,ALKjB,CHGG,AQRe,EELjC,ADMsB,CLEH,ADEA,AMJI,CLEH,AFGE,ACDF,AMJI,CPKD,AQXvB,CFKuC,CAAA,ACCZ,CDDc,ALKjB,AMJI,CTOD,CAAC,AEFA,CFEC,AEFA,AMNe,ALM9B,CDAgB,AQX9B,CVa+B,AILF,AMR7B,CVagC,CGFd,AMLiB,CTOD,AGFf,AMLiB,CDDc,ACCb,CDDc,ERQb,AGFf,AMLiB,CTOD,EGDzB,CMN8B,CAAC,ECN7C,CVa8C,AQRe,AEL7D,CVa+C,CSPG,CAAC,GTOC,EAAE,ASPE,CAAC,CAAC,ETOA,CAAC,CSPG,MTOI,ASPE,CTOD,MAAM,CAAC;ACR7D,ASHb,ECMI,ATIA,AGTA,ACEA,CAAC,CNSG,AILJ,AMPJ,CNOK,CODD,ATIM,AMPqD,ACEnD,CECR,AVHS,AOAmD,ACEnD,CTOD,AEFA,ADPC,AEQK,CHCL,AQTqD,ALQ/C,AOXnB,ADKe,EPKA,ACCM,COXrB,CVYiB,AQTqD,CRSpD,AQTqD,CLQ9C,CQLrB,AVHiB,AEQK,AMNJ,CEClB,AFDmB,CPKD,AOLE,CPKD,ADPF,COAwD,CAAA,ALQ9C,AMNJ,CEClB,AHHsE,ALQ/C,AMNJ,CTOD,AGDM,CDDL,CSJxB,ATIyB,AMPqD,AEHlF,CVY8B,AEFA,ACCM,CFRf,EQEc,CNMK,AMNJ,CDFoD,ALQ/C,AMNJ,CDFoD,CRSpD,CGDO,AMNJ,CNMK,EQLzC,ADNJ,CDK4C,CNMK,AMNJ,CNMK,IMNA,CNMK,AMNJ,CNMK,GAAG,CMNH,CAAC,CAAC,CNMK,GMND;AHP1D,CAKC,CJQD,AGRA,AKGA,EVOI,AWPJ,AHHgG,CAAE,ACG7F,CPKC,EFEE,AWPR,ATKQ,AGRR,AFSc,CHCL,AKVT,AFSe,EDDJ,ACCM,AONjB,EVOa,AWPb,CXOc,CGDO,CQNrB,ARMsB,AONtB,CAAA,CRKkB,CAAC,AQLnB,CCAA,CRM2B,CHCL,AEFA,ACCM,CHCL,AEFA,AGRvB,AFS6B,CHCL,AEFA,AGRpB,ELUsB,AGDM,CHCL,EAAE,CGDO,CAAC,EHCJ,CAAC,AGDM,CAAC,IAAI,CAAC,CHCL,CAAC,CKVtC,CAAA,CFS+C,CAAC,CHCL,EAAE,AGDM,IHCF,AKVjD,CLUkD,CKVlD,MLUyD,CAAC,GKVlD,EAAA,CLUwD,CAAC;AMjB5D,ENkBT,AEFA,AKHA,CPKC,CWPG,AHFA,AEJI,ADMJ,EPKE,CIhBG,AHiBE,CQNH,ATKA,AIhBC,AIKD,ADME,CEAD,ANJT,AGES,AEJD,AHQR,CAAA,CLGW,EMPE,CAAC,EGEE,AFAE,CEAF,AHFC,CGEC,ATKA,AGTlB,AGEkB,AEJD,CRWE,AKHnB,AEFqB,CDFD,ADIpB,CCJqB,AEJU,CRWT,AGTtB,AIIwB,CPKD,AQXU,ADMR,CPKD,AGTxB,AGEwB,ADIpB,CDbsB,ECa1B,CDb0B,CESG,GAAG,CAAC,EAAE,CAAC,CDI/B,CCJiC,EAAE,ADIN,EAAA,CEFW,CACrC,CHZkB,GGYd,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAClB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAClB,aAAa,CAAC,CAAC,EACf,aAAa,CAAC,CAAC,CAClB;ETIL,AEFA,ESNI,ARMJ,AOZQ,AHQJ,AEGA,CNCH,CDAK,AGVF,AGEI,CDID,CPMP,AWRQ,ADNA,AHQA,CPMR,AWRS,ADND,GDWI,CJTD,AGEI,ACOF,CELC,AHFE,CGEF,ADNA,CCME,CTMC,AGVF,CLYf,AKZgB,AKFS,CVczB,AONmB,CLIC,AQZO,CRYN,CMRG,ADIF,CLIC,AMRE,ECOA,CPCC,AKJA,AEGA,CJTD,AEME,AEGA,CPCC,CODC,ITGf,AEFmB,AKJA,ELIE,CFEnC,EEFsC,EAAE,CAAC,GAAG,CAAC,CFE9B,CEFgC,EFEX,CEFc,CFEd,CEFgB,CODC,CAAC,GPCG,EAAE,GAAG,EAAE,CAAC;EELjE,AFMA,EFEI,AWRA,ANJJ,AKFQ,AHQJ,AEGA,CJTH,CDID,AFMI,CENJ,AGEO,CPMC,AQVI,AEJJ,AHQA,CPMC,AQVI,AEJL,EFIO,CCOH,CTGC,ASHA,CTGC,AUdD,CFIM,CJEnB,AIFoB,CJEpB,AFMe,AQZQ,AHQN,CAAA,CGRQ,AHQN,GLIC,AMRM,CJEpB,AFMe,AMRK,CAAE,CGEH,ATMF,AODE,CELC,APA1B,AKK0B,CDPK,ACOJ,EAAE,CDPK,GAAG,GAAG,ERUF,AWRZ,APA1B,CIF2C,ERUF,IQVQ,CAAC,CAAC,ACOJ,CAAC,GTGG;IAC/C,AIRA,AFMA,AQZI,AHQJ,AEGA,EEN4B,CJGzB,AEGA,CTGC,AIRA,AIFI,AEJJ,AHQA,AEGA,CTGC,AIRA,AIFI,AEJL,ERYG,AMRI,ERUF,AWTmB,CXSlB,AONA,CLIC,AMRI,ADIJ,CCJK,CCOH,CENmB,CAAC,AJGlB,CGRA,AHQC,AEGA,EDPM,CRUH,AQVG,AEJS,CVcX,AWTkB,APClB,AIFI,CGCc,APClB,AMNa,AHQZ,CIHmB,APClB,AGEA,CPMC,AQVI,ADIJ,CEGC,CTGC,AONA,CPMC,AQVI,ERUF,CAAC,AQVI,ADIJ,CAAC,CPMC,AQVI,GAAG,CRUH,AONA,CPMC,AONA,CAAC,CAAC,ECJM,CAAC,ERUF,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;EIP3E,AFMA,CENC,CJQG,AWV4B,ADF5B,AHMA,AEGA,CEPwC,CAAC,CHApC,ADIF,AEGA,CTGC,AQVE,AEFF,AHMA,AEGA,CTGC,AUZA,IVYI,CAAC,AONA,CAAC,EEGE,CAAA,CFHE,AEGA,CFHC,GAAG,CGNC,AHMA,CGNA,AHMC,CGNC,CHMC,IAAI,CAAC,GAAG,CAAC,CAAC,CPMC,AONA,GPMG,aAAa;EACtD,AWVA,APGA,AFMA,ACHA,CHIC,AWVA,CHAG,AEDA,AHKA,AEGA,CNDJ,CCHA,AFMM,ACHN,CCHA,AFMO,AKLA,AEGA,CFHC,AEGA,CCRC,CRUC,CAAC,CAAC,CQVC,CRUC,AQVA,AHKA,AEGA,CNDd,AIFc,AEGC,CLJf,ADGA,AIFgB,CHDhB,AFMiB,AQVA,CAAC,CRUC,AOFA,CNDf,AOPgB,ADQA,CCRC,EPOrB,CDGwB,AQVA,CDQC,CPEC,AQVA,ADQA,CLJhB,CMJkB,CRUC,AQVA,CNI7B,CFM+B,AQVA,ADQA,CPEC,AOFA,CND3B,AOP4B,ADQA,EPEE,AOFA,CPEC,ACHF,EDGI,ACHJ,CMCK,CLJ5B,AKI6B,CPEC,EAAE,EOFE,CAAC,ELJhB,AFMkB,EENlB,AFMoB,COFC,CAAC,CPEC,AOFA,CAAC,CPEC,CAAC,IAAI,WAAW;EFGvE,AWXA,ATSA,AGdJ,AESI,CAAC,CHFD,AIDI,ALKA,AMCA,EEPJ,ATSM,AQVE,CCCR,ATSO,ACHA,AMCA,CTIP,AITA,ADIQ,AMCA,CTIR,AKhBJ,CHcc,AQVE,CFED,AEFE,CRUD,AMRA,CJCZ,AFOa,COFC,CPEC,AOFA,CEPf,APEA,COFA,CXWA,AEFkB,CFElB,AGLmB,AMCA,CLLnB,AFOoB,AMRA,AEFE,ADQF,CDNC,AEFE,CPOD,CHKlB,CWXG,CTSkB,AQVE,ADQF,CTIzB,AGL0B,AOPE,ADQF,CEP1B,ATS2B,ACHA,CEX9B,AGM+B,CAAC,ACMA,CPEC,AOFA,CAAC,CPEC,CAAC,ACHA,AMCA,ECRL,CVYvB,AEF+B,AMRA,AEFR,CRUS,AMRA,ACMA,CDNC,ACMA,CEPtC,ATSuC,AMRA,CAAC,ENQE,CQVP,ADQQ,CPEC,AQVR,ADQQ,CTIlB,EAAA,ASJqB,CAAC,CPEC,AOFA,CAAC,CPEC,GAAG,EAAE,CAAC,CAAC,CQVP,CAAA,CRUU,AQVR,CAAC,URUkB;AGd5E,CAZA,CH4BI,AG5BJ,AEsBA,CFtBA,CL4BI,AWVI,APEA,AIDA,ALKA,AOPA,ADQA,EPGA,CAAC,ACJE,AMCA,CTGP,AWVQ,APEE,ADIF,AMCA,CEPC,AJIb,ELMa,AMTE,CNSD,CFAV,AIRe,CKKD,CEPC,AFOA,CTGf,AWVgB,APEE,AFQJ,AKNjB,CLMkB,ACJE,CKLC,ALKD,CAAE,AMCA,CTGnB,ASHoB,CPGD,CSVG,ATUF,CSVE,CAAE,APEE,CAAC,AKKF,CPGD,AOHE,CPGD,EOHI,CAAC,CPGD,AOHE,CLLG,AFQJ,CERK,AKKF,CPGD,GOHK,CAAC,KLLH,AKKQ,CAAC,GAAG,CAAC,CAAC,CLLP,AKKQ,ELLR;ACNjC,AEQb,CAnBA,CIgBI,AHCA,ADjBJ,CIgBK,AHCA,ADjBL,CP0BQ,AEAA,ACJA,AONA,ADOA,ELN0C,CCNrC,AFWF,AMCA,CJZE,AFWD,AONA,ADOA,CCPC,ERUE,EFAE,AITiC,CJShC,AITiC,ADKjC,AMCA,CNDC,AONA,ADOA,CCPC,GPMG,AMCA,CNDC,AONA,ADOA,CTGC,AITiC,AMDjC,CVUC,AITiC,GDK9B,AONA,ADOA,CNDC,AMCA,CLNkC,ACNhC,AFWD,ECLmC,ADKjC,CEXE,CKKN,ADOM,CTGT,AUVG,ADOO,CNDC,AMCA,CJZE,AFWD,CMCC,CLNkC,AMDxC,CNCyC,AMDxC,CAAA,CPMS,AONT,ADOS,CTGT,AIT2C,ADKjC,AMCA,CLNkC,ADKjC,AONX,CVUA,AGJY,GMCG,CAAC,KAAK,CAAC,CJZE,AIYD,CJZC,AIYA,CJZE,AKK1B,CAAA,iBAAiB,EAAA,CAAE,CAAC,CAAC;AHhB1C,EIiBT,AHEO,EJFuC,ADM1C,AONA,ADOA,CLPsE,CJSxC,AWTlC,APA2E,AFUnE,CSVR,ATUS,ACJF,AIvBE,AEwBF,CNDC,AONA,AHjBC,AEwBD,CPGG,AMRJ,AEFE,CFEF,CNQM,COHD,CTEsB,ASFtB,CPGI,ACJF,AMCA,CPGG,ACJF,AONA,AHjBN,CIiBT,ADAgB,CCAhB,CJjBS,CL2BY,ACJF,CAAC,AONA,CVSsB,AECnB,AQVF,CVSsB,AWTtC,CRMkB,CDIG,ACJF,CQNxB,AHEsB,ALIG,AONA,AHjBhB,CP0BsC,AECnB,CFDoB,AECnB,ACJF,CKJ3B,GLI+B,AONN,CVS2B,AGHpB,AONP,CVS4B,EGHlB,CAAC,AONP,CVS4B,AWTzD,ARMqC,AONP,CVS4B,AGHpB,AONR,CAAA,CFE9B,CEF8B,cAAA,CAAA,iBAAiB,EAAC;EDQhD,CAAC,CTCiC,AWR9B,APAA,AIEA,ALIA,CHEsD,CAAC,AEEnD,AQX0C,CRWzC,ACJF,AOP4C,CCC3C,APAE,AIEA,ALIF,CQNC,ATUE,AQX0C,CAAC,CRWzC,CQX2C,CFGzC,CNQC,ACJF,CDIG,ACJH,CQNE,AHEE,ALIF,CQNC,ETUI,CEVC,AIEA,CNQC,AMRA,CGFD,CAAA,APAG,COAD,ATUE,EAAE,CEVC,AFUA,AMRA,CAAA,CAAE,CJFC,CACxB,CIC0B,GAAG,CJDxB,CAAC,CIC0B,EAAE,IJDrB,CAAC,UAAA,IAAI,EAAA;EJQ1B,AGFA,AMCJ,CTCK,AGFA,CQNG,AHEA,EJDQ,AFSJ,AQZkD,CAAC,CCEnD,AHEE,CGFD,ADFoD,ADSjE,CLNsB,IFSF,AMRA,CJDO,CODP,ATUE,CSVD,AHEE,CJDO,AKM7B,CLN6B,CAAA,CODL,AHEE,CGFD,APCI,AICF,IGFE,CAAC,CHEG,CAAA,CJDJ,AICM,CJDN,EODO,AHEE,CGFD,EHEI,GJDJ,AICO,EJDN,AICQ,GGFC,CAAC,CPCN,CAAC,SAAS,EAAE,IAAI,CAAC;AKM5D,CA7BA,CT+BA,AGDI,AM9BJ,CAAA,CEuBQ,AHEA,AEL0D,CRazD,ACHL,AOVgE,CNIpD,ADMZ,AOViE,CAAC,CCG1D,AHEE,AELyD,CVWvE,AWRa,CHEG,GJDO,AICJ,CJDK,CJOvB,AGDG,CQPgB,AROhB,CQPiB,AHEE,CAAC,CJDK,CDMrB,ECNwB,CDM5B,CKL0B,CAAA,CAAE,EJDM,CICH,CJDK,CODL,CAAC,CRO3B,ECNoC,AICJ,CGFD,AHEE,CGFD,APCM,IDMnB,CCNwB,CDMxB,ECN2B,CICH,EGFA,CAAC,EPCQ,CAAc;AJO3E,AS/Ba,CTAb,CAAA,AEkCI,CFlCJ,CWwBQ,APCI,AICJ,ALIJ,AOTI,CNIK,CAAC,CACL,AK1BI,CEwBD,AHEE,ALIV,AOTQ,ADrBC,CEwBA,ADHA,CFKG,GAAG,ALIf,EOTe,CCGC,ARMhB,AOTgB,CCGC,AHEE,AC1BV,CD0BW,ELIpB,AOToB,ADrBX,CEwBY,ADHA,CCGC,EHEI,CAAA,AELD,CCGC,AHEE,CGFD,EHEI,AC1BtB,ECqBgB,CAAA,CCGQ,CAAC,CHEG,CAAC,AELT,CAAC,CAAA,CAAA,EAAA,ECGa,CAAC,GHEK,QELnB,CAAA,iBAAiB,EAAC;AVrBvC,EWyBT,ATWA,CSXC,CPEG,AICA,ALGA,EOV8C,CVrBzC,AUqB0C,CVrB1C,AQ4BC,ALGF,CDKD,ACLE,AOV4C,ENM1C,AMN4C,ERe5C,ACLE,CH/BJ,CQ4BQ,CJDD,ADIA,CH/BP,AI2BQ,CICG,ELGA,CCJC,CAAC,AICE,CR5Bf,MQ4BsB,CAAA,CAAE,GJDC,CAAC,CAAC,GAAG,CAAC,UAAA,KAAK,EAAA;AFUjD,CAAC,CSXD,EHGQ,ALGA,ECL6C,AMNQ,CAAC,CPWlD,CQNZ,ADLgE,EFQjD,CAAC,CGHf,APCoD,CDKnC,GCLuC,ADKpC,GKHG,CAAC,CJFgC,CAAA,EDK5B,CCL+B,CAAC,KAAI,CAAC,SAAS,EAAE,KAAK,CAAC;AODnF,ATpBa,CSLb,CAAA,CAAA,CP0BqD,ADO7C,AObyD,CNMkB,AMNhB,CNMiB,AIEzD,AERyC,CRfvD,AMuBe,AERyC,CRfxD,AQeyD,CFQxC,EAAE,CLKhB,CAAC,CKLkB,KAAK,CLKhB,CAAC,CKLkB,CNvBf,AMuBgB,GNvBhB,KC4BF,OAAO,EAAA,CD5BL;ASLf,EP2BT,CAAC,CMNG,EFOsC,ALMlC,CQlCC,AH4BkC,CG5BlC,ADqBD,CFOqC,AEPpC,CPaK,CKNiC,CG5BtC,EH4ByC,CG5BzC,ADqBM,CAAC,GCrBP,CH4B+C,AEPpC,CAAC,CPaK,CKNiC,ELM9B,AObJ,CPaI,CAAA,EAAA,EObJ,CAAA,IAAI,CAAC,CAAA,CAAA,EAAA,EPaD,CAAA,WObC,CAAA,GPac,EAAC,KAAI,EAAE,KObJ,EPaW,AObV,CPaW;ECL3D,EID4D,CAAE,CJC9D,AID+D,ALOvD,AOd0C,CNQlD,AMRmD,EAAE,CPczC,AOd0C,MNQtD,CAAA,IAAI,CDMoB,ECNxB,EDM4B,QCNvB,GAA6B,CDMM,CCNN,ADMO,QAAQ,GAAG,MAAM,EAAE;ICLxD,AIDA,EERoD,CNSjD,AMTkD,CNSjD,ADMI,COf+C,CAAC,CFQjD,CAAC,ELOM,GCND,ADMI,GCND,AIDA,CAAC,OJCO,CDMK,CAAC,QAAQ;ICLtC,AMV0D,CAAE,CFQzC,AER0C,CNU1D,AIFiB,AER0C,CNU1D,ADMI,AOhBuD,CFQzC,EAAE,ELQZ,CKRe,ALQd,GCNA,CAAA,ADMI,CCNF,AIFiB,ELQZ,CKRe,CAAC,ULQJ;ICLhC,AMVA,EFOsC,ALSlC,CCND,AIHoC,CJGnC,AMVA,CFOqC,AEPpC,ENUE,AIHoC,CJGnC,EIHsC,CEPnC,CNUC,AMVA,CNUC,GIHuC,AEPpC,CAAC,EFOsC,EEPlC,CNUC,CAAC,CAAC,EAAE,CMVL,CAAA,ENUS,CAAC,CMVN,CAAC,CAAA,CAAA,EAAA,GNUc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,AMVzB,CAAA,ENU4B,IAAI,CAAC,EAAE,CAAC,OMVnB,EAAC;INW5C,AIJwD,ALUxD,CKV0D,ALUzD,CKV0D,ALUzD,AOjB4C,CNW3C,AMX4C,CNW3C,CMX6C,CAAC,ENW1C,CAAA,CAAE;EACd,ADMA,CCNC,ADMA,CKVG,EERoD,CAAC,EAAE,EFQhD,CAAC,QAAQ,CAAC;EJMb,ADKZ,EOnBiE,CAAE,CNcvD,AINe,AERyC,CNcxD,AINgB,AERyC,CAAC,CFQxC,ALW9B,EKXgC,CLW/B,EKXkC,EJMvB,CAAA,EIN4B,GAAG,CAAC,SJMjB,GAAvB,YAAA;ADKJ,CArCA,CAAA,AOmBI,CPnBJ,CCiCQ,EIPsC,CAAC,CJOnC,CAAC,AIPoC,EAAE,GAAG,IJOhC,EIPsC,CJOnC,EIPsC,EJOlC,CAAC,SAAS,CAAA,CAAE;ADjC5B,ECkCT,AMbA,CNaC,CIR2D,CAAE,CAAC,CL1BtD,CAAA,AOqBT,CAAA,EPrBS,GAAA,GAAA,MOqBT,CAAI,KAAA,CAAA,SAAA,EAAA,YAAU,EAAA;ENclB,EIRQ,KJQR,AMdI,EFMW,CAAC,CJQf,KMdG,EFMoB,CAAC,CENrB,EAAA;ANcJ,CAlCA,CAAA,CAAA,GI0B2B,AELnB,CFKoB,EAAE,EAAE,EELjB,CFKoB,GELhB,CAA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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["import { Drawable } from \"./models/drawable.model\";\r\n\r\nexport class Canvas {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _ctx: CanvasRenderingContext2D;\r\n\r\n    constructor() {\r\n        this._canvas = document.createElement(\"canvas\");\r\n        this._setCanvasSize();\r\n        this._ctx = this._canvas.getContext(\"2d\")!;\r\n        document.body.appendChild(this._canvas);\r\n    }\r\n\r\n    private _setCanvasSize(): void {\r\n        this._canvas.width = window.innerWidth;\r\n        this._canvas.height = window.innerHeight;\r\n    }\r\n\r\n    clear(): void {\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n        this._ctx.fillStyle = \"black\";\r\n        this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n\r\n    drawBackground(img: HTMLImageElement): void {\r\n        this._ctx.globalCompositeOperation = \"multiply\";\r\n        this._ctx.drawImage(img, 0, 0, this._canvas.width, this._canvas.height);\r\n        this._ctx.globalCompositeOperation = \"source-over\";\r\n    }\r\n\r\n    draw(drawables: Drawable[]): void {\r\n        drawables.forEach(drawable => drawable.draw(this._ctx));\r\n    }\r\n}\r\n","import { Degrees, Radians } from \"../models/angle.model\";\r\nimport { Point } from \"../models/point.model\";\r\n\r\nexport const toRadians = (angle: Degrees): Radians => ((angle * Math.PI) / 180) as Radians;\r\n\r\nexport const normalize = (angle: Radians): Radians => {\r\n    const twoPi = 2 * Math.PI;\r\n    const normalized = angle % twoPi;\r\n    return (normalized >= 0 ? normalized : normalized + twoPi) as Radians;\r\n};\r\n\r\nexport const getAngle = (start: Point, end: Point): Radians => {\r\n    return normalize(Math.atan2(end.y - start.y, end.x - start.x) as Radians);\r\n};\r\n","import { Point, PointWithDistance } from \"../models/point.model\";\r\nimport { Ray } from \"../ray\";\r\nimport { Segment } from \"../segment\";\r\n\r\nexport const areParallel = (ray: Ray, segment: Segment): boolean => {\r\n    return ray.angle === segment.angle;\r\n};\r\n\r\nexport const getIntersection = (ray: Ray, segment: Segment): PointWithDistance | null => {\r\n    if (areParallel(ray, segment)) {\r\n        return null;\r\n    }\r\n\r\n    const x1 = ray.start.x;\r\n    const y1 = ray.start.y;\r\n    const x2 = ray.start.x + Math.cos(ray.angle);\r\n    const y2 = ray.start.y + Math.sin(ray.angle);\r\n    const x3 = segment.start.x;\r\n    const y3 = segment.start.y;\r\n    const x4 = segment.end.x;\r\n    const y4 = segment.end.y;\r\n\r\n    const denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n    if (denominator === 0) {\r\n        return null;\r\n    }\r\n\r\n    const t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / denominator;\r\n    const u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / denominator;\r\n\r\n    if (t >= 0 && u >= 0 && u <= 1) {\r\n        return {\r\n            x: x1 + t * (x2 - x1),\r\n            y: y1 + t * (y2 - y1),\r\n            distance: t,\r\n        };\r\n    }\r\n\r\n    return null;\r\n};\r\n","import { Drawable } from \"./models/drawable.model\";\r\nimport { Radians } from \"./models/angle.model\";\r\nimport { Point } from \"./models/point.model\";\r\nimport { normalize } from \"./math/radian\";\r\nimport { Segment } from \"./segment\";\r\nimport { getIntersection } from \"./math/intersection\";\r\n\r\nexport class Ray implements Drawable {\r\n    private _color: string = \"red\";\r\n    private _end: Point | null = null;\r\n\r\n    constructor(public readonly start: Point, public readonly angle: Radians) {\r\n        this.angle = normalize(angle);\r\n    }\r\n\r\n    get end(): Point {\r\n        return this._end\r\n            ? this._end\r\n            : {\r\n                  x: this.start.x + Math.cos(this.angle) * 1000,\r\n                  y: this.start.y + Math.sin(this.angle) * 1000,\r\n              };\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.strokeStyle = this._color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.start.x, this.start.y);\r\n        ctx.lineTo(this.end.x, this.end.y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    cast(segments: Segment[]): void {\r\n        this._end = null;\r\n        let record = Infinity;\r\n\r\n        segments.forEach((segment) => {\r\n            const intersection = getIntersection(this, segment);\r\n            if (intersection && intersection.distance < record) {\r\n                record = intersection.distance;\r\n                this._end = intersection;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { getAngle } from \"./math/radian\";\r\nimport { Radians } from \"./models/angle.model\";\r\nimport { Drawable } from \"./models/drawable.model\";\r\nimport { Point } from \"./models/point.model\";\r\nimport { Placer } from \"./placer/placer.model\";\r\nimport { Ray } from \"./ray\";\r\nimport { Segment } from \"./segment\";\r\n\r\nexport class Lamp implements Drawable {\r\n    private _position: Point = { x: 0, y: 0 };\r\n\r\n    constructor(private readonly _getPlace: Placer) {}\r\n\r\n    get position(): Point {\r\n        return this._position;\r\n    }\r\n\r\n    update(): void {\r\n        this._updatePosition();\r\n    }\r\n\r\n    createRays(segments: Segment[]): Ray[] {\r\n        const edges = segments.flatMap(segment => [segment.start, segment.end]);\r\n        const uniqueAngles = new Set(\r\n            edges.flatMap(edge => {\r\n                const angle = getAngle(this._position, edge);\r\n                return [angle - 0.0001, angle, angle + 0.0001] as Radians[];\r\n            })\r\n        );\r\n        return Array.from(uniqueAngles).map(angle => new Ray(this._position, angle));\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.fillStyle = \"yellow\";\r\n        ctx.beginPath();\r\n        ctx.arc(this._position.x, this._position.y, 5, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    }\r\n\r\n    private _updatePosition(): void {\r\n        this._position = this._getPlace();\r\n    }\r\n}\r\n","import { Point } from \"../models/point.model\";\r\n\r\nclass CursorPositionState {\r\n    private _position: Point = { x: 0, y: 0 };\r\n\r\n    constructor() {\r\n        window.addEventListener(\"mousemove\", (event) => {\r\n            this._position = { x: event.clientX, y: event.clientY };\r\n        });\r\n    }\r\n\r\n    get position(): Point {\r\n        return this._position;\r\n    }\r\n}\r\n\r\nexport const cursorPositionState = new CursorPositionState();\r\n","import { Point } from \"../models/point.model\";\r\nimport { cursorPositionState } from \"./cursor-position.state\";\r\nimport { Placer } from \"./placer.model\";\r\n\r\nexport const createMousePlacer =\r\n    (offset: Point = { x: 0, y: 0 }): Placer =>\r\n    () => {\r\n        return {\r\n            x: offset.x + cursorPositionState.position.x,\r\n            y: offset.y + cursorPositionState.position.y,\r\n        };\r\n    };\r\n","import { getAngle, normalize } from \"./math/radian\";\r\nimport { Radians } from \"./models/angle.model\";\r\nimport type { Drawable } from \"./models/drawable.model\";\r\nimport { Point } from \"./models/point.model\";\r\n\r\nexport class Segment implements Drawable {\r\n    private _color: string = \"black\";\r\n    private _angle: Radians;\r\n\r\n    constructor(public readonly start: Point, public readonly end: Point) {\r\n        this._angle = getAngle(this.start, this.end);\r\n    }\r\n\r\n    get angle(): number {\r\n        return this._angle;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.strokeStyle = this._color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.start.x, this.start.y);\r\n        ctx.lineTo(this.end.x, this.end.y);\r\n        ctx.stroke();\r\n    }\r\n}\r\n","import { Drawable } from \"./models/drawable.model\";\r\nimport { Point } from \"./models/point.model\";\r\nimport { Segment } from \"./segment\";\r\n\r\nexport class Polygon implements Drawable {\r\n    constructor(private _points: Point[] = []) {}\r\n\r\n    static generateRandom(): Polygon {\r\n        const sides = Math.floor(Math.random() * 5) + 3;\r\n        const polygon = new Polygon();\r\n\r\n        const center = { x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight };\r\n\r\n        for (let i = 0; i < sides - 1; i++) {\r\n            polygon.addPoint({\r\n                x: Math.random() * 200 - 100 + center.x,\r\n                y: Math.random() * 150 - 75 + center.y,\r\n            });\r\n        }\r\n\r\n        polygon.addPoint(polygon._points[0]);\r\n        return polygon;\r\n    }\r\n\r\n    static generateRegular(): Polygon {\r\n        const width = Math.random() * 100 + 50;\r\n        const height = Math.random() * 100 + 50;\r\n        const cx = Math.random() * window.innerWidth;\r\n        const cy = Math.random() * window.innerHeight;\r\n\r\n        const polygon = new Polygon();\r\n        polygon.addPoint({ x: cx - width / 2, y: cy - height / 2 });\r\n        polygon.addPoint({ x: cx + width / 2, y: cy - height / 2 });\r\n        polygon.addPoint({ x: cx + width / 2, y: cy + height / 2 });\r\n        polygon.addPoint({ x: cx - width / 2, y: cy + height / 2 });\r\n        polygon.addPoint(polygon._points[0]);\r\n        return polygon;\r\n    }\r\n\r\n    get segments(): Segment[] {\r\n        const segments: Segment[] = [];\r\n        for (let i = 0; i < this._points.length - 1; i++) {\r\n            segments.push(new Segment(this._points[i], this._points[i + 1]));\r\n        }\r\n        return segments;\r\n    }\r\n\r\n    addPoint(point: Point): void {\r\n        this._points.push(point);\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.beginPath();\r\n        ctx.moveTo(this._points[0].x, this._points[0].y);\r\n        this._points.forEach(point => ctx.lineTo(point.x, point.y));\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        // ctx.fill();\r\n    }\r\n}\r\n","import { Drawable } from \"./models/drawable.model\";\r\n\r\nexport class SightZone implements Drawable {\r\n    constructor(private readonly _rayA, private readonly _rayB) {}\r\n\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        const length = 1;\r\n        const zoneEnd = {\r\n            x: (this._rayA.end.x + this._rayB.end.x) / 2,\r\n            y: (this._rayA.end.y + this._rayB.end.y) / 2,\r\n        };\r\n        const normalizedEnd = {\r\n            x: zoneEnd.x + (zoneEnd.x - this._rayA.start.x) * length,\r\n            y: zoneEnd.y + (zoneEnd.y - this._rayA.start.y) * length,\r\n        };\r\n        const gradient = ctx.createLinearGradient(\r\n            this._rayA.start.x,\r\n            this._rayA.start.y,\r\n            normalizedEnd.x,\r\n            normalizedEnd.y\r\n        );\r\n        gradient.addColorStop(0, \"rgba(255, 255, 255, 1)\");\r\n        gradient.addColorStop(1, \"rgba(0, 0, 0, 0)\");\r\n        ctx.fillStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this._rayA.start.x, this._rayA.start.y);\r\n        ctx.lineTo(this._rayA.end.x, this._rayA.end.y);\r\n        ctx.lineTo(this._rayB.end.x, this._rayB.end.y);\r\n        ctx.lineTo(this._rayB.start.x, this._rayB.start.y);\r\n        ctx.fill();\r\n    }\r\n}\r\n","import { Lamp } from \"./lamp\";\r\nimport { Drawable } from \"./models/drawable.model\";\r\nimport { createMousePlacer } from \"./placer/mouse.placer\";\r\nimport { Polygon } from \"./polygon\";\r\nimport { Ray } from \"./ray\";\r\nimport { Segment } from \"./segment\";\r\nimport { SightZone } from \"./sight-zone\";\r\n\r\nexport class Scene {\r\n    private _polygons: Polygon[] = [];\r\n    private _lamps: Lamp[] = [];\r\n    private _rays: Ray[] = [];\r\n    private _sightZones: SightZone[] = [];\r\n\r\n    constructor() {\r\n        this._addEdgePolygon();\r\n\r\n        for (let i = 0; i < 25; i++) {\r\n            this._polygons.push(Polygon.generateRegular());\r\n        }\r\n\r\n        this._lamps.push(new Lamp(createMousePlacer()));\r\n        this._lamps.push(new Lamp(createMousePlacer({ x: -10, y: 0 })));\r\n        this._lamps.push(new Lamp(createMousePlacer({ x: 10, y: 0 })));\r\n        this._lamps.push(new Lamp(createMousePlacer({ x: 0, y: -10 })));\r\n        this._lamps.push(new Lamp(createMousePlacer({ x: 0, y: 10 })));\r\n    }\r\n\r\n    get sightZones(): SightZone[] {\r\n        return this._sightZones;\r\n    }\r\n\r\n    get drawables(): Drawable[] {\r\n        return [...this._polygons, ...this._lamps];\r\n    }\r\n\r\n    get _segments(): Segment[] {\r\n        return this._polygons.flatMap(polygon => polygon.segments);\r\n    }\r\n\r\n    update(): void {\r\n        const t1 = performance.now();\r\n        this._rays = [];\r\n        this._lamps.forEach(lamp => {\r\n            lamp.update();\r\n            this._rays.push(...lamp.createRays(this._segments));\r\n        });\r\n\r\n        this._rays.forEach(ray => {\r\n            ray.cast(this._segments);\r\n        });\r\n        this._addSightZones();\r\n\r\n        this._perfStats(performance.now() - t1);\r\n    }\r\n\r\n    private _addEdgePolygon(): void {\r\n        const screenWidth = window.innerWidth;\r\n        const screenHeight = window.innerHeight;\r\n        const edgePolygon = new Polygon([\r\n            { x: 0, y: 0 },\r\n            { x: screenWidth, y: 0 },\r\n            { x: screenWidth, y: screenHeight },\r\n            { x: 0, y: screenHeight },\r\n            { x: 0, y: 0 },\r\n        ]);\r\n        this._polygons.push(edgePolygon);\r\n    }\r\n\r\n    private _addSightZones(): void {\r\n        this._sightZones = [];\r\n        const sortedRays = this._rays.sort((a, b) => a.angle - b.angle);\r\n        for (let i = 0; i < sortedRays.length; i++) {\r\n            const rayA = sortedRays[i];\r\n            const rayB = sortedRays[(i + 1) % sortedRays.length];\r\n            this._sightZones.push(new SightZone(rayA, rayB));\r\n        }\r\n    }\r\n\r\n    private _perfStats(duration: number): void {\r\n        const performanceElement = document.getElementById(\"performance\");\r\n        if (performanceElement) {\r\n            performanceElement.innerText = `Update duration: ${duration.toFixed(2)}ms`;\r\n        }\r\n    }\r\n}\r\n","import { Canvas } from \"./canvas\";\r\nimport { Scene } from \"./scene\";\r\n\r\nexport class Game {\r\n    private _canvas: Canvas = new Canvas();\r\n    private _scene: Scene = new Scene();\r\n    private _background: HTMLImageElement = new Image();\r\n\r\n    constructor() {\r\n        this._background.src = \"https://steamuserimages-a.akamaihd.net/ugc/2058741574591783688/9C6BAD68B0072EBC34EAEE00DEE08662DE28BB27/\";\r\n        this._background.onload = () => {\r\n            this._loop();\r\n        };\r\n    }\r\n    _loop() {\r\n        this._update();\r\n        this._draw();\r\n        requestAnimationFrame(() => this._loop());\r\n    }\r\n    _update() {\r\n        this._scene.update();\r\n    }\r\n    _draw() {\r\n        this._canvas.clear();\r\n        this._canvas.draw(this._scene.sightZones);\r\n        this._canvas.drawBackground(this._background);\r\n        this._canvas.draw(this._scene.drawables);\r\n    }\r\n}\r\n","import { Game } from \"./game\";\r\n\r\nconst game = new Game();\r\n"]}